package ventanas;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowFocusListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import motor.Conexion;
import motor.Configuracion;
import motor.Funciones;
import motor.Grid;
import motor.Main;
import motor.ModeloGrid;
import org.apache.log4j.Logger;

/**
 *
 * @author jose
 */
public class Menu extends javax.swing.JFrame {
    private static String usuario;
    private JFrame principal;
    private ModeloGrid dTableModelo = new ModeloGrid();
    private Grid g = new Grid();
    private Object fila[];
    private boolean acceso = false;
    private int numFilas;
    private Logger log;
    
    /**
     * Creates new form Menu
     */    
    public Menu(String usuario) {
        initComponents();
        this.setTitle("Fichero de Clientes");
        this.setLocationRelativeTo(null);
        
        // Iniciamos el log, si tenemos activo el debug
        if(Configuracion.getInstance().getProperty(Configuracion.DEBUG).equals("si")) {
            Main iniciarlog = new Main();
            log = iniciarlog.getLog();
        }
        
        // Usuario en sesión
        this.usuario = usuario;
        
        jTableClientes.setDefaultRenderer (Object.class, new Grid());
        jLabelNombreSeleccion.setText("");
        
        fila = new Object[4];
        
        jTableClientes.setModel(dTableModelo);        
        dTableModelo.addColumn("Código");        
        dTableModelo.addColumn("Nombre");
        dTableModelo.addColumn("Lugar visita");
        dTableModelo.addColumn("Fecha de última visita");
        
        // Establecemos un ancho máximo a la columna del identificador
        g.establecerAnchoMaximo(jTableClientes, "Código", 50);        
        // Refrescamos el grid
        obtenerClientesGrid();
        
        if(acceso == false) {
            JOptionPane.showMessageDialog(null, "Bienvenido al sistema. Pulse en el botón 'Nuevo cliente' para comenzar", "Información", JOptionPane.INFORMATION_MESSAGE, new ImageIcon("src/iconos/information.png"));
        }
        
        setDefaultCloseOperation (WindowConstants.DO_NOTHING_ON_CLOSE); 
        addWindowListener(new WindowAdapter(){
            public void windowClosing(WindowEvent we){
                int siNo = JOptionPane.showConfirmDialog(null, "¿Desea abandonar la aplicación?", "Confirmación", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, new ImageIcon("src/iconos/help2.png"));
                if(siNo == 0) {
                    Configuracion.getInstance().setProperty("sesionActiva", "no");
                    System.exit(0);
                }   
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldFiltro = new javax.swing.JTextField();
        jButtonNuevoCliente = new javax.swing.JButton();
        jButtonNuevaVisita = new javax.swing.JButton();
        jButtonConsultarVisitas = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableClientes = new javax.swing.JTable();
        jLabelNombreSeleccion = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldSeleccion = new javax.swing.JTextField();
        jButtonConfiguracion = new javax.swing.JButton();
        jButtonEditarCliente = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Filtrar por nombre:");

        jTextFieldFiltro.setToolTipText("A medida que se escribe, se filtra la tabla");
        jTextFieldFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldFiltroKeyPressed(evt);
            }
        });

        jButtonNuevoCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/user1_add.png"))); // NOI18N
        jButtonNuevoCliente.setText("Nuevo cliente");
        jButtonNuevoCliente.setToolTipText("Dar de alta un nuevo cliente");
        jButtonNuevoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoClienteActionPerformed(evt);
            }
        });

        jButtonNuevaVisita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/book_blue_add.png"))); // NOI18N
        jButtonNuevaVisita.setText("Nueva visita");
        jButtonNuevaVisita.setToolTipText("Crear una nueva visita al cliente seleccionado");
        jButtonNuevaVisita.setEnabled(false);
        jButtonNuevaVisita.setMaximumSize(new java.awt.Dimension(116, 36));
        jButtonNuevaVisita.setMinimumSize(new java.awt.Dimension(116, 36));
        jButtonNuevaVisita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevaVisitaActionPerformed(evt);
            }
        });

        jButtonConsultarVisitas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/book_blue_view.png"))); // NOI18N
        jButtonConsultarVisitas.setText("Consultar visitas");
        jButtonConsultarVisitas.setToolTipText("Consultar visitas del cliente seleccionado");
        jButtonConsultarVisitas.setEnabled(false);
        jButtonConsultarVisitas.setMaximumSize(new java.awt.Dimension(116, 36));
        jButtonConsultarVisitas.setMinimumSize(new java.awt.Dimension(116, 36));
        jButtonConsultarVisitas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarVisitasActionPerformed(evt);
            }
        });

        jTableClientes.setFont(new java.awt.Font("Lucida Grande", 0, 13)); // NOI18N
        jTableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableClientes.setToolTipText("Para seleccionar un cliente, haga doble click sobre la fila");
        jTableClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClientesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableClientes);

        jLabelNombreSeleccion.setForeground(new java.awt.Color(0, 51, 204));
        jLabelNombreSeleccion.setText("Cliente seleccionado");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Selección:");

        jTextFieldSeleccion.setEditable(false);

        jButtonConfiguracion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/gears.png"))); // NOI18N
        jButtonConfiguracion.setText("Configuración");
        jButtonConfiguracion.setToolTipText("Acceso a la configuración de la aplicación");
        jButtonConfiguracion.setMaximumSize(new java.awt.Dimension(116, 36));
        jButtonConfiguracion.setMinimumSize(new java.awt.Dimension(116, 36));
        jButtonConfiguracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfiguracionActionPerformed(evt);
            }
        });

        jButtonEditarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/user1_refresh.png"))); // NOI18N
        jButtonEditarCliente.setText("Editar cliente");
        jButtonEditarCliente.setToolTipText("Editar información del cliente seleccionado");
        jButtonEditarCliente.setEnabled(false);
        jButtonEditarCliente.setMaximumSize(new java.awt.Dimension(116, 36));
        jButtonEditarCliente.setMinimumSize(new java.awt.Dimension(116, 36));
        jButtonEditarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarClienteActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(27, 27, 27)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jTextFieldFiltro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 194, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButtonNuevoCliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButtonConfiguracion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane2)
                    .add(layout.createSequentialGroup()
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jTextFieldSeleccion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jLabelNombreSeleccion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 198, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButtonEditarCliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButtonNuevaVisita, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButtonConsultarVisitas, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(1, 1, 1)))
                .add(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(22, 22, 22)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jTextFieldFiltro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButtonConfiguracion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButtonNuevoCliente))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 392, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabelNombreSeleccion)
                    .add(jLabel2)
                    .add(jTextFieldSeleccion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButtonConsultarVisitas, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButtonNuevaVisita, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButtonEditarCliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**/
    private void jTableClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientesMouseClicked
        if(evt.getClickCount() == 2) {
            int columna = jTableClientes.columnAtPoint(evt.getPoint());
            jTextFieldSeleccion.setText(g.seleccionarFila(jTableClientes, dTableModelo, columna, 0));
            jLabelNombreSeleccion.setText(g.seleccionarFila(jTableClientes, dTableModelo, columna, 1));
            
            jButtonEditarCliente.setEnabled(true);
            jButtonNuevaVisita.setEnabled(true);
            jButtonConsultarVisitas.setEnabled(true);
        }
    }//GEN-LAST:event_jTableClientesMouseClicked

    private void jButtonNuevoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoClienteActionPerformed
        principal = new JFrame();
        new NuevoCliente(principal, "Nuevo Cliente", "", true).setVisible(true);
        
        this.addWindowFocusListener(new WindowFocusListener() {        
            @Override
            public void windowGainedFocus(WindowEvent e) {
                obtenerClientesGrid();
            }

            @Override
            public void windowLostFocus(WindowEvent e) {
                // No hacemos nada
            }
        });
    }//GEN-LAST:event_jButtonNuevoClienteActionPerformed

    private void jButtonNuevaVisitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevaVisitaActionPerformed
        if(!this.jLabelNombreSeleccion.getText().equals("")) {
            principal = new JFrame();
            new NuevaVisita(principal, jLabelNombreSeleccion.getText(), jTextFieldSeleccion.getText(), true).setVisible(true);
        }
    }//GEN-LAST:event_jButtonNuevaVisitaActionPerformed

    private void jButtonConsultarVisitasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarVisitasActionPerformed
        if(!this.jLabelNombreSeleccion.getText().equals("")) {
            principal = new JFrame();
            new ConsultarVisitas(principal, jLabelNombreSeleccion.getText(), jTextFieldSeleccion.getText(), true).setVisible(true);
        }
    }//GEN-LAST:event_jButtonConsultarVisitasActionPerformed

    private void jTextFieldFiltroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldFiltroKeyPressed
        g.aplicarFiltro(1, jTableClientes, jTextFieldFiltro.getText());
    }//GEN-LAST:event_jTextFieldFiltroKeyPressed

    private void jButtonConfiguracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfiguracionActionPerformed
        principal = new JFrame();
        new ConfigurarAplicacion(principal, usuario, true).setVisible(true);
    }//GEN-LAST:event_jButtonConfiguracionActionPerformed

    private void jButtonEditarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarClienteActionPerformed
        numFilas = jTableClientes.getRowCount();
        principal = new JFrame();
        new NuevoCliente(principal, "Editar Cliente", jTextFieldSeleccion.getText(), true).setVisible(true);
        
        this.addWindowFocusListener(new WindowFocusListener() {        
            @Override
            public void windowGainedFocus(WindowEvent e) {
                obtenerClientesGrid();
                if(numFilas != jTableClientes.getRowCount()) {
                    jTextFieldSeleccion.setText("");
                    jLabelNombreSeleccion.setText("");
                    jButtonEditarCliente.setEnabled(false);
                    jButtonNuevaVisita.setEnabled(false);
                    jButtonConsultarVisitas.setEnabled(false);
                }
            }

            @Override
            public void windowLostFocus(WindowEvent e) {
                // No hacemos nada
            }
        });
    }//GEN-LAST:event_jButtonEditarClienteActionPerformed
    
    private void obtenerClientesGrid() {
        Conexion con = new Conexion();
        
        try {
            ResultSet rs = con.consultar("SELECT clientes.id, clientes.nombre, lugares.descripcion, MAX(visitas.fecha) FROM clientes, visitas, lugares WHERE clientes.id=visitas.id_cliente AND clientes.id_lugar=lugares.id GROUP BY clientes.nombre ORDER BY clientes.id ASC");
            dTableModelo.setRowCount(0);
            
            while(rs.next()) {
                for(int i = 0; i < 4; i++) {
                    fila[i] = rs.getObject(i + 1);
                    if(i == 3) {
                        String año = Funciones.Left(fila[i].toString(), 4);
                        String mes = Funciones.Right(Funciones.Left(fila[i].toString(), 7), 2);
                        String dia = Funciones.Right(fila[i].toString(), 2);
                        fila[i] = dia + "/" + mes + "/" + año;
                    }
                }
                dTableModelo.addRow(fila);                
                acceso = true;
            }
            rs.close();
            con.desconectar();
        } catch (SQLException ex) {
            if(Configuracion.getInstance().getProperty(Configuracion.DEBUG).equals("si")) log.error("[Menu.java (Maestro)] SQLException: " + ex.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu("").setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConfiguracion;
    private javax.swing.JButton jButtonConsultarVisitas;
    private javax.swing.JButton jButtonEditarCliente;
    private javax.swing.JButton jButtonNuevaVisita;
    private javax.swing.JButton jButtonNuevoCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelNombreSeleccion;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableClientes;
    private javax.swing.JTextField jTextFieldFiltro;
    private javax.swing.JTextField jTextFieldSeleccion;
    // End of variables declaration//GEN-END:variables
}
