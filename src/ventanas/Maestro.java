package ventanas;

import java.sql.ResultSet;
import java.sql.SQLException;
import motor.Conexion;
import motor.Configuracion;
import motor.Grid;
import motor.Main;
import motor.ModeloGrid;
import org.apache.log4j.Logger;

/**
 *
 * @author jose
 */
public class Maestro extends javax.swing.JDialog {
    private ModeloGrid dTableModelo = new ModeloGrid();
    private Grid g = new Grid();
    private int columna = 0;
    private static int id; // Variable que devuelve el id seleccionado del maestro
    private Logger log;
    
    /**
     * Creates new form Maestro
     */
    public Maestro(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();        
        this.setLocationRelativeTo(null);
    }
    
    public Maestro(java.awt.Dialog parent, String titulo, String consulta, String[] cabecera, boolean modal) {
        super(parent, modal);
        initComponents();
        jTableMaestro.setDefaultRenderer (Object.class, new Grid());
        this.setLocationRelativeTo(null);
        this.setTitle(titulo);
        
        // Iniciamos el log, si tenemos activo el debug
        if(Configuracion.getInstance().getProperty(Configuracion.DEBUG).equals("si")) {
            Main iniciarlog = new Main();
            log = iniciarlog.getLog();
        }
        
        Conexion con = new Conexion();
        
        Object fila[] = new Object[cabecera.length];
        
        jTableMaestro.setModel(dTableModelo);
        for(int i = 0; i < cabecera.length; i++) {
            dTableModelo.addColumn(cabecera[i]);
        }
        
        // Establecemos un ancho máximo a la columna del identificador
        g.establecerAnchoMaximo(jTableMaestro, "Código", 50);
        
        try {
            ResultSet rs = con.consultar(consulta);
                        
            while(rs.next()) {
                for(int i = 0; i < 2; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                dTableModelo.addRow(fila);                
            }
            rs.close();
        } catch (SQLException ex) {
            if(Configuracion.getInstance().getProperty(Configuracion.DEBUG).equals("si")) log.error("[Maestro.java (Maestro)] SQLException: " + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldFiltroMaestro = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMaestro = new javax.swing.JTable();
        jButtonAceptar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Filtrar:");

        jTextFieldFiltroMaestro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFiltroMaestroActionPerformed(evt);
            }
        });

        jTableMaestro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableMaestro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMaestroMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableMaestro);

        jButtonAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/check2.png"))); // NOI18N
        jButtonAceptar.setText("Aceptar");
        jButtonAceptar.setToolTipText("Seleccionar registro del maestro");
        jButtonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAceptarActionPerformed(evt);
            }
        });

        jButtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/delete2.png"))); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.setToolTipText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(39, 39, 39)
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jTextFieldFiltroMaestro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 176, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .addContainerGap(33, Short.MAX_VALUE)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 336, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jButtonCancelar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButtonAceptar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(26, 26, 26)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jTextFieldFiltroMaestro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 240, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButtonCancelar)
                    .add(jButtonAceptar))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jTextFieldFiltroMaestroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFiltroMaestroActionPerformed
        g.aplicarFiltro(1, jTableMaestro, jTextFieldFiltroMaestro.getText());
    }//GEN-LAST:event_jTextFieldFiltroMaestroActionPerformed

    private void jTableMaestroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMaestroMouseClicked
        columna = jTableMaestro.columnAtPoint(evt.getPoint());
        if(evt.getClickCount() == 2) {
            // Id seleccionado
            id = Integer.parseInt(g.seleccionarFila(jTableMaestro, dTableModelo, columna, 0));
            this.dispose();
        }
    }//GEN-LAST:event_jTableMaestroMouseClicked

    private void jButtonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAceptarActionPerformed
        if(columna != 0) {
            id = Integer.parseInt(g.seleccionarFila(jTableMaestro, dTableModelo, columna, 0));
            this.dispose();
        }
    }//GEN-LAST:event_jButtonAceptarActionPerformed
    
    // Método para devolver el id seleccionado del maestro
    public static int getIdSeleccionado() {
        return id;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Maestro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Maestro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Maestro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Maestro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Maestro dialog = new Maestro(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAceptar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableMaestro;
    private javax.swing.JTextField jTextFieldFiltroMaestro;
    // End of variables declaration//GEN-END:variables
}